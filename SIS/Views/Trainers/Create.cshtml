@model SIS.Models.Trainer

@{
    ViewBag.Title = "Create";
}

@section Menu {
    @Scripts.Render("~/Scripts/Forms/Advanced/menu")
}

<style>
    .kv-avatar .file-preview-frame, .kv-avatar .file-preview-frame:hover {
        margin: 0;
        padding: 0;
        border: none;
        box-shadow: none;
        text-align: center;
    }

    .kv-avatar .file-input {
        display: table-cell;
        max-width: 220px;
    }
</style>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Trainer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div id="kv-avatar-errors-2" class="center-block" style="width:800px;display:none"></div>
        <form class="text-center" action="/avatar_upload.php" method="post" enctype="multipart/form-data">
            <div class="kv-avatar center-block" style="width:200px">
                <input id="avatar-2" name="avatar-2" type="file" class="file-loading">
            </div>
             include other inputs if needed and include a form submit (save) button 
        </form>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.Editor("Photo", new { htmlAttributes = new { @class = "form-control", type = "file", @multiple = "multiple" } })
                @Html.ValidationMessage("Photo", "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.IC, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.IC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IC, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-lg-2" })
            <div class="col-lg-10">
                <div class="radio-inline">
                    @*@Html.RadioButton("Gender", "Male")*@
                    &nbsp; &nbsp; &nbsp;<label>@Html.RadioButtonFor(m => m.Gender, "Male")Male</label>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    @*@Html.RadioButton("Gender", "Female")*@
                    <label>@Html.RadioButtonFor(m => m.Gender, "Female")Female</label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Race, htmlAttributes: new { @class = "control-label col-lg-2" })
            <div class="col-lg-10">
                <div class="radio-inline">
                    &nbsp; &nbsp; &nbsp;<label>@Html.RadioButtonFor(m => m.Race, "Chinese")Chinese</label>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    &nbsp; &nbsp; &nbsp;<label>@Html.RadioButtonFor(m => m.Race, "Malay")Malay</label>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    &nbsp; &nbsp; &nbsp;<label>@Html.RadioButtonFor(m => m.Race, "Indian")Indian</label> &nbsp; &nbsp; &nbsp;
                    <label>other: @Html.EditorFor(model => model.Race, new { htmlAttributes = new { @class = "form-control" } })</label>
                </div>
            </div>
        </div><div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {

        <script src="~/Scripts/jquery.maskedinput.js" type="text/javascript"></script>
        <script>
        $(document).ready(function() {
            $("#IC").inputmask("mask", { "mask": "999999-99-9999" });
            $("#PhoneNum").inputmask("mask", { "mask": "999-999 9999" });
            $("#DateOfBirth").inputmask("date");
        });

        var btnCust = '<button type="button" class="btn btn-default" title="Add picture tags" ' +
        'onclick="alert(\'Call your custom code here.\')">' +
        '<i class="glyphicon glyphicon-tag"></i>' +
        '</button>';
        $("#avatar-2").fileinput({
            overwriteInitial: true,
            maxFileSize: 1500,
            showClose: false,
            showCaption: false,
            showBrowse: false,
            browseOnZoneClick: true,
            removeLabel: '',
            removeIcon: '<i class="glyphicon glyphicon-remove"></i>',
            removeTitle: 'Cancel or reset changes',
            elErrorContainer: '#kv-avatar-errors-2',
            msgErrorClass: 'alert alert-block alert-danger',
            defaultPreviewContent: '<img src="/uploads/default_avatar_male.jpg" alt="Your Avatar" style="width:160px"><h6 class="text-muted">Click to select</h6>',
            layoutTemplates: { main2: '{preview} ' + btnCust + ' {remove} {browse}' },
            allowedFileExtensions: ["jpg", "png", "gif"]
        });

        </script>
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/jquerymask")
        @Scripts.Render("~/Content/plugins/input-mask/js")
        @Scripts.Render("~/Content/plugins/momentjs/js")
        @Scripts.Render("~/Scripts/Forms/Advanced")

    }
}
