@model SIS.Models.Trainer

@{
    ViewBag.Title = "Edit";
}

@section Menu {
    @Scripts.Render("~/Scripts/Forms/Advanced/menu")
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Trainer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <div class="form-group">
                @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.LabelFor(model => model.IC, htmlAttributes: new {@class = "control-label col-xs-2"})
            <div class="col-xs-4">
                @Html.EditorFor(model => model.IC, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IC, "", new {@class = "text-danger"})
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-lg-2" })
            <div class="col-lg-10">
                <div class="radio-inline">
                    @*@Html.RadioButton("Gender", "Male")*@
                    &nbsp; &nbsp; &nbsp;<label>@Html.RadioButtonFor(m => m.Gender, "Male")Male</label>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    @*@Html.RadioButton("Gender", "Female")*@
                    <label>@Html.RadioButtonFor(m => m.Gender, "Female")Female</label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Race, htmlAttributes: new { @class = "control-label col-lg-2" })
            <div class="col-lg-10">
                <div class="radio-inline">
                    &nbsp; &nbsp; &nbsp;<label>@Html.RadioButtonFor(m => m.Race, "Chinese")Chinese</label>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    &nbsp; &nbsp; &nbsp;<label>@Html.RadioButtonFor(m => m.Race, "Malay")Malay</label>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    &nbsp; &nbsp; &nbsp;<label>@Html.RadioButtonFor(m => m.Race, "Indian")Indian</label> &nbsp; &nbsp; &nbsp;
                    <label>other: @Html.EditorFor(model => model.Race, new { htmlAttributes = new { @class = "form-control" } })</label>
                </div>
            </div>

        </div><div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    <script src="~/Scripts/jquery.maskedinput.js" type="text/javascript"></script>
    <script>
        $(document).ready(function () {
            $("#IC").inputmask("mask", { "mask": "999999-99-9999" });
            $("#PhoneNum").inputmask("mask", { "mask": "999-999 9999" });
            $("#DateOfBirth").inputmask("date");
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquerymask")
    @Scripts.Render("~/Content/plugins/input-mask/js")
    @Scripts.Render("~/Content/plugins/momentjs/js")
    @Scripts.Render("~/Scripts/Forms/Advanced")

}
