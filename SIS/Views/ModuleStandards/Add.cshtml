@model List<SIS.Models.ModuleStandard>

@{
    ViewBag.Title = "Add";
}

<h2>Add</h2>

@using (Html.BeginForm("Add", "ModuleStandards", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div><a href="#" id="addNew">Add New</a></div>
    <table id="dataTable">
        <tr>
            <th>
                ClassStudent
            </th>
            <th>
                MarkType
            </th>
            <th>
                Mark
            </th>
            <th></th>
        </tr>
        @if (Model != null && Model.Count > 0) 
        {
            int j = 0;

            foreach (var i in Model)
            {
                <tr>
                    <td>
                       @Html.DropDownListFor(a => a[j].ClassStudentId, (SelectList)ViewBag.ClassStudentId, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.DropDownListFor(a => a[j].MarkTypeId, (SelectList)ViewBag.MarkTypeId, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBoxFor(a => a[j].Mark,new { @class = "form-control" })
                    </td>
                    <td></td>
                </tr>

                j++;
            }
        }

    </table>
    <input type="submit" value="save" />
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $("#addNew").click(function (e) {
            e.preventDefault();

            var $tableBody = $("#dataTable");
            var $trLast = $tableBody.find("tr:last");
            var $trNew = $trLast.clone();

            var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
            $trNew.find("td:last").html('<a href="#" class="remove" id="Rem">Remove</a>');
            $.each($trNew.find(':input'), function (i, val) {
                // Replaced Name
                var oldN = $(this).attr('name');
                var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                $(this).attr('name', newN);
                ////Replaced value
                //var type = $(this).attr('type');
                //if (type.toLowerCase() == "text") {
                //    $(this).attr('value', '');
                //}

                // If you have another Type then replace with default value
                $(this).removeClass("input-validation-error");

            });

            $trLast.after($trNew);
        });
        // 2. Remove 
        $('a.remove').click (function (e) {
            e.preventDefault();
            $(this).parent().parent().remove();
        });
    });
    </script>
}
